// Generated by Dagger (https://dagger.dev).
package com.karsoft.effectivemobile.di;

import android.content.Context;
import com.karsoft.effectivemobile.utils.LocalStorage;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata("dagger.hilt.android.qualifiers.ApplicationContext")
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class LocalStorageModule_ProvideFusedLocationProviderClientFactory implements Factory<LocalStorage> {
  private final LocalStorageModule module;

  private final Provider<Context> contextProvider;

  public LocalStorageModule_ProvideFusedLocationProviderClientFactory(LocalStorageModule module,
      Provider<Context> contextProvider) {
    this.module = module;
    this.contextProvider = contextProvider;
  }

  @Override
  public LocalStorage get() {
    return provideFusedLocationProviderClient(module, contextProvider.get());
  }

  public static LocalStorageModule_ProvideFusedLocationProviderClientFactory create(
      LocalStorageModule module, Provider<Context> contextProvider) {
    return new LocalStorageModule_ProvideFusedLocationProviderClientFactory(module, contextProvider);
  }

  public static LocalStorage provideFusedLocationProviderClient(LocalStorageModule instance,
      Context context) {
    return Preconditions.checkNotNullFromProvides(instance.provideFusedLocationProviderClient(context));
  }
}
