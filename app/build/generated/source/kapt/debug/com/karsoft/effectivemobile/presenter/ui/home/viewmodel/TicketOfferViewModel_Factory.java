// Generated by Dagger (https://dagger.dev).
package com.karsoft.effectivemobile.presenter.ui.home.viewmodel;

import com.karsoft.effectivemobile.domain.mapper.base.Mapper;
import com.karsoft.effectivemobile.domain.models.TicketOffer;
import com.karsoft.effectivemobile.domain.usecase.TicketOfferUseCase;
import com.karsoft.effectivemobile.presenter.models.TicketOfferUI;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class TicketOfferViewModel_Factory implements Factory<TicketOfferViewModel> {
  private final Provider<TicketOfferUseCase> ticketOfferUseCaseProvider;

  private final Provider<Mapper<TicketOffer, TicketOfferUI>> ticketOfferMapperProvider;

  public TicketOfferViewModel_Factory(Provider<TicketOfferUseCase> ticketOfferUseCaseProvider,
      Provider<Mapper<TicketOffer, TicketOfferUI>> ticketOfferMapperProvider) {
    this.ticketOfferUseCaseProvider = ticketOfferUseCaseProvider;
    this.ticketOfferMapperProvider = ticketOfferMapperProvider;
  }

  @Override
  public TicketOfferViewModel get() {
    return newInstance(ticketOfferUseCaseProvider.get(), ticketOfferMapperProvider.get());
  }

  public static TicketOfferViewModel_Factory create(
      Provider<TicketOfferUseCase> ticketOfferUseCaseProvider,
      Provider<Mapper<TicketOffer, TicketOfferUI>> ticketOfferMapperProvider) {
    return new TicketOfferViewModel_Factory(ticketOfferUseCaseProvider, ticketOfferMapperProvider);
  }

  public static TicketOfferViewModel newInstance(TicketOfferUseCase ticketOfferUseCase,
      Mapper<TicketOffer, TicketOfferUI> ticketOfferMapper) {
    return new TicketOfferViewModel(ticketOfferUseCase, ticketOfferMapper);
  }
}
