// Generated by view binder compiler. Do not edit!
package com.karsoft.effectivemobile.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.karsoft.effectivemobile.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemTicketBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView ivRectangle;

  @NonNull
  public final ConstraintLayout layoutTicket;

  @NonNull
  public final TextView tvBadge;

  @NonNull
  public final TextView tvCodeAirport;

  @NonNull
  public final TextView tvPrice;

  @NonNull
  public final TextView tvTime;

  @NonNull
  public final TextView tvTimeOfFly;

  @NonNull
  public final TextView tvTimePilot;

  private ItemTicketBinding(@NonNull ConstraintLayout rootView, @NonNull ImageView ivRectangle,
      @NonNull ConstraintLayout layoutTicket, @NonNull TextView tvBadge,
      @NonNull TextView tvCodeAirport, @NonNull TextView tvPrice, @NonNull TextView tvTime,
      @NonNull TextView tvTimeOfFly, @NonNull TextView tvTimePilot) {
    this.rootView = rootView;
    this.ivRectangle = ivRectangle;
    this.layoutTicket = layoutTicket;
    this.tvBadge = tvBadge;
    this.tvCodeAirport = tvCodeAirport;
    this.tvPrice = tvPrice;
    this.tvTime = tvTime;
    this.tvTimeOfFly = tvTimeOfFly;
    this.tvTimePilot = tvTimePilot;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemTicketBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemTicketBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_ticket, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemTicketBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.iv_rectangle;
      ImageView ivRectangle = ViewBindings.findChildViewById(rootView, id);
      if (ivRectangle == null) {
        break missingId;
      }

      id = R.id.layout_ticket;
      ConstraintLayout layoutTicket = ViewBindings.findChildViewById(rootView, id);
      if (layoutTicket == null) {
        break missingId;
      }

      id = R.id.tv_badge;
      TextView tvBadge = ViewBindings.findChildViewById(rootView, id);
      if (tvBadge == null) {
        break missingId;
      }

      id = R.id.tv_code_airport;
      TextView tvCodeAirport = ViewBindings.findChildViewById(rootView, id);
      if (tvCodeAirport == null) {
        break missingId;
      }

      id = R.id.tv_price;
      TextView tvPrice = ViewBindings.findChildViewById(rootView, id);
      if (tvPrice == null) {
        break missingId;
      }

      id = R.id.tv_time;
      TextView tvTime = ViewBindings.findChildViewById(rootView, id);
      if (tvTime == null) {
        break missingId;
      }

      id = R.id.tv_time_of_fly;
      TextView tvTimeOfFly = ViewBindings.findChildViewById(rootView, id);
      if (tvTimeOfFly == null) {
        break missingId;
      }

      id = R.id.tv_time_pilot;
      TextView tvTimePilot = ViewBindings.findChildViewById(rootView, id);
      if (tvTimePilot == null) {
        break missingId;
      }

      return new ItemTicketBinding((ConstraintLayout) rootView, ivRectangle, layoutTicket, tvBadge,
          tvCodeAirport, tvPrice, tvTime, tvTimeOfFly, tvTimePilot);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
