// Generated by view binder compiler. Do not edit!
package com.karsoft.effectivemobile.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.karsoft.effectivemobile.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class BottomSheetSearchTicketBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout designBottomSheet;

  @NonNull
  public final TextView etFromWher;

  @NonNull
  public final EditText etPlaceOfArrival;

  @NonNull
  public final ImageView ivClear;

  @NonNull
  public final ImageView ivSearch;

  @NonNull
  public final LinearLayout llPhuket;

  @NonNull
  public final LinearLayout llSochi;

  @NonNull
  public final LinearLayout llStambul;

  @NonNull
  public final ImageView tip1;

  @NonNull
  public final ImageView tip2;

  @NonNull
  public final ImageView tip3;

  @NonNull
  public final ImageView tip4;

  @NonNull
  public final View viewLine;

  private BottomSheetSearchTicketBinding(@NonNull LinearLayout rootView,
      @NonNull LinearLayout designBottomSheet, @NonNull TextView etFromWher,
      @NonNull EditText etPlaceOfArrival, @NonNull ImageView ivClear, @NonNull ImageView ivSearch,
      @NonNull LinearLayout llPhuket, @NonNull LinearLayout llSochi,
      @NonNull LinearLayout llStambul, @NonNull ImageView tip1, @NonNull ImageView tip2,
      @NonNull ImageView tip3, @NonNull ImageView tip4, @NonNull View viewLine) {
    this.rootView = rootView;
    this.designBottomSheet = designBottomSheet;
    this.etFromWher = etFromWher;
    this.etPlaceOfArrival = etPlaceOfArrival;
    this.ivClear = ivClear;
    this.ivSearch = ivSearch;
    this.llPhuket = llPhuket;
    this.llSochi = llSochi;
    this.llStambul = llStambul;
    this.tip1 = tip1;
    this.tip2 = tip2;
    this.tip3 = tip3;
    this.tip4 = tip4;
    this.viewLine = viewLine;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static BottomSheetSearchTicketBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static BottomSheetSearchTicketBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.bottom_sheet_search_ticket, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static BottomSheetSearchTicketBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      LinearLayout designBottomSheet = (LinearLayout) rootView;

      id = R.id.et_from_wher;
      TextView etFromWher = ViewBindings.findChildViewById(rootView, id);
      if (etFromWher == null) {
        break missingId;
      }

      id = R.id.et_place_of_arrival;
      EditText etPlaceOfArrival = ViewBindings.findChildViewById(rootView, id);
      if (etPlaceOfArrival == null) {
        break missingId;
      }

      id = R.id.iv_clear;
      ImageView ivClear = ViewBindings.findChildViewById(rootView, id);
      if (ivClear == null) {
        break missingId;
      }

      id = R.id.iv_search;
      ImageView ivSearch = ViewBindings.findChildViewById(rootView, id);
      if (ivSearch == null) {
        break missingId;
      }

      id = R.id.ll_phuket;
      LinearLayout llPhuket = ViewBindings.findChildViewById(rootView, id);
      if (llPhuket == null) {
        break missingId;
      }

      id = R.id.ll_sochi;
      LinearLayout llSochi = ViewBindings.findChildViewById(rootView, id);
      if (llSochi == null) {
        break missingId;
      }

      id = R.id.ll_stambul;
      LinearLayout llStambul = ViewBindings.findChildViewById(rootView, id);
      if (llStambul == null) {
        break missingId;
      }

      id = R.id.tip_1;
      ImageView tip1 = ViewBindings.findChildViewById(rootView, id);
      if (tip1 == null) {
        break missingId;
      }

      id = R.id.tip_2;
      ImageView tip2 = ViewBindings.findChildViewById(rootView, id);
      if (tip2 == null) {
        break missingId;
      }

      id = R.id.tip_3;
      ImageView tip3 = ViewBindings.findChildViewById(rootView, id);
      if (tip3 == null) {
        break missingId;
      }

      id = R.id.tip_4;
      ImageView tip4 = ViewBindings.findChildViewById(rootView, id);
      if (tip4 == null) {
        break missingId;
      }

      id = R.id.view_line;
      View viewLine = ViewBindings.findChildViewById(rootView, id);
      if (viewLine == null) {
        break missingId;
      }

      return new BottomSheetSearchTicketBinding((LinearLayout) rootView, designBottomSheet,
          etFromWher, etPlaceOfArrival, ivClear, ivSearch, llPhuket, llSochi, llStambul, tip1, tip2,
          tip3, tip4, viewLine);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
